{"version":3,"sources":["mbta/api_key.js","images/logo.png","components/Search.js","components/ScheduleListItems.js","images/instruction_1.png","images/instruction_2.png","components/Favorites.js","components/PreferenceDialog.js","components/FavoritesDialog.js","components/SearchDialog.js","components/MessageSnackbar.js","components/App.js","registerServiceWorker.js","reducers/ui-reducer.js","reducers/time-reducer.js","reducers/schedule-reducer.js","reducers/search-schedule-reducer.js","reducers/preference-reducer.js","index.js","mbta/prediction.js"],"names":["module","exports","Search","state","collapseHandler","routeId","props","dispatch","type","popupSchedule","route","stop","loading","hasOwnProperty","id","key","schedule","Promise","all","prediction","then","departureTimes","open","catch","error","message","variant","setTimeout","showArrowIcon","route_id","stop_id","direct_id","schedules","visibility","render","list","Routes","push","ListItem","button","style","backgroundColor","color","opacity","onClick","ListItemIcon","paddingLeft","marginRight","alt","src","logo","height","width","ListItemText","inset","primary","name","primaryTypographyProps","text_color","fontSize","secondary","direction","secondaryTypographyProps","collapse","stops","isLoading","CircularProgress","size","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","Divider","light","React","Component","connect","ui","search_collapse","schedule_loading","ScheduleListItems","currentTime","limit","url","link","href","target","departureTime","length","i","Date","t","Number","parseInt","s","m","h","SS","MM","HH","textAlign","toLocaleTimeString","Favorites","openDialog","destination","getListItems","Object","values","map","sch","index","isFailed","shortNameStyle","lineHeight","borderRadius","fontWeight","fontAize","short_name","ListItemSecondaryAction","IconButton","maxNumber","imgWidth","maxWidth","listItems","disableTypography","instruction_1","instruction_2","preference","max_schedule_number","Transition","Slide","PreferenceDialog","close","getOptions","v","value","maxNumberChange","event","number","Dialog","dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","FormControl","FormLabel","TextField","margin","onChange","select","SelectProps","native","textAlignLast","paddingBottom","preference_dialog","FavoritesDialog","closeDialog","removeSchedule","DialogContentText","DialogActions","Button","autoFocus","favorites_dialog","SearchDialog","dialogClose","isScheduleExist","hasTrain","openSnackbar","addScheduleToggle","schedule_name","search","inbound","outbound","fullScreen","AppBar","position","Toolbar","Typography","search_dialog","searchSchedule","MessageSnackbar","Snackbar","anchorOrigin","vertical","horizontal","ContentProps","classes","root","action","snackbar","withStyles","success","info","warning","App","updateSchedule","requests","refreshing","panelChange","panelNumber","panel","openPreference","showPanel","display","marginTop","marginBottom","BottomNavigation","showLabels","bottom","BottomNavigationAction","label","icon","setInterval","schedule_is_refreshing","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","defaultState","JSON","parse","localStorage","getItem","uiReducer","newState","setItem","stringify","timeReducer","scheduleReducer","join","defaultSchedule","searchScheduleReducer","preferenceReducer","reducer","combineReducers","store","createStore","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","require","api_key","direction_id","res","json","data","o","attributes","departure_time"],"mappings":"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","file":"static/js/main.cdb14f5c.chunk.js","sourcesContent":["module.exports = \"e99522d8c64c485abb639ead5c22d661\";\n","export default __webpack_public_path__ + \"static/media/logo.0663db85.png\";","/*\n * This component compiles everything needed to display data in the Search tab:\n *  List of Routes and the list of stops nested within.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// List\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Collapse from '@material-ui/core/Collapse';\nimport Divider from '@material-ui/core/Divider';\n\n// Icons\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n// Progress\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// MBTA\nimport prediction from '../mbta/prediction';\nimport logo from '../images/logo.png';\nimport Routes from '../mbta/route.json';\n\n// Search\nclass Search extends React.Component {\n    state = {}\n\n    collapseHandler = (routeId) => () => {\n        this.props.dispatch({\n            type: 'UI_SEARCH_COLLAPSE',\n            routeId: routeId\n        });\n    }\n\n    popupSchedule = (route, stop) => () => {\n\n        const isLoading = this.props.loading.hasOwnProperty(`${route.id}_${stop.id}`);\n        if (isLoading) {\n            // block the ListItem, not to call the API at the sametime\n            return;\n        }\n\n        // loading\n        const key = `${route.id}_${stop.id}`;\n        this.props.dispatch({\n            type: 'UI_SCHEDULE_LOADING_ADD',\n            schedule: key\n        });\n\n        Promise.all([\n            prediction(route.id, stop.id, 0),\n            prediction(route.id, stop.id, 1)\n        ])\n            .then(departureTimes => {\n                this.props.dispatch({\n                    type: 'SEARCH_SCHEDULE',\n                    route: route,\n                    stop: stop,\n                    departureTimes: departureTimes\n                });\n\n                this.props.dispatch({\n                    type: 'UI_SEARCH_DIALOG',\n                    open: true\n                });\n\n                // unloading\n                this.props.dispatch({\n                    type: 'UI_SCHEDULE_LOADING_REMOVE',\n                    schedule: key\n                });\n            })\n            .catch(error => {\n                // show error message\n                this.props.dispatch({\n                    type: 'UI_SEARCH_DIALOG_SNARCK_BAR',\n                    open: true,\n                    message: 'Failed to retrieve data from server. Please check your Internet.',\n                    variant: 'error'\n                });\n\n                // unloading after 2 second\n                setTimeout(() => {\n                    this.props.dispatch({\n                        type: 'UI_SCHEDULE_LOADING_REMOVE',\n                        schedule: key\n                    });\n                }, 2000);\n            });\n    }\n\n    showArrowIcon = (route_id, stop_id, direct_id) => {\n        return this.props.schedules.hasOwnProperty(`${route_id}_${stop_id}_${direct_id}`) ?\n            {} : { visibility: 'hidden' };\n    }\n\n    render = () => {\n\n        // List of Routes\n        const list = [];\n        for (let route of Routes) {\n\n            list.push(\n                <ListItem button key={route.id + '-route'}\n                    style={{ backgroundColor: route.color, opacity: 0.9 }}\n                    onClick={this.collapseHandler(route.id)}>\n\n                    <ListItemIcon style={{ paddingLeft: '18px', marginRight: '-50px' }}>\n                        <img alt='' src={logo} style={{ height: '30px', width: '30px' }} />\n                    </ListItemIcon>\n\n                    <ListItemText inset\n                        primary={route.name}\n                        primaryTypographyProps={{\n                            style: {\n                                color: route.text_color,\n                                fontSize: '20px'\n                            }\n                        }}\n                        secondary={`${route.direction[0]}bound / ${route.direction[1]}bound`}\n                        secondaryTypographyProps={{\n                            style: {\n                                color: route.text_color,\n                                fontSize: '18px'\n                            }\n                        }} />\n                    {this.props.collapse[route.id] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                </ListItem>\n            );\n\n            // List of stops\n            let stops = [];\n            for (let stop of route.stops) {\n\n                const isLoading = this.props.loading.hasOwnProperty(`${route.id}_${stop.id}`);\n                stops.push(\n                    <ListItem button={!isLoading} key={stop.id} onClick={this.popupSchedule(route, stop)}>\n\n                        {isLoading && <CircularProgress size={20} style={{ marginRight: '20px' }} />}\n\n                        <ListItemText inset primary={stop.name} style={{ paddingLeft: '80px' }}/>\n\n                        <ArrowDownwardIcon style={this.showArrowIcon(route.id, stop.id, 0)} />\n                        <ArrowUpwardIcon style={this.showArrowIcon(route.id, stop.id, 1)} />\n                    </ListItem>\n                );\n            }\n\n            // Collapse with stop list\n            list.push(\n                <Collapse key={route.id + '-collapse'} in={this.props.collapse[route.id]} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        {stops}\n                    </List>\n                </Collapse>\n            );\n\n            // Add Divider\n            list.push(\n                <Divider key={route.id + '-divider'} light />\n            )\n        }\n\n        return ( <List component=\"nav\" style={this.props.style}>{list}</List> );\n    }\n}\n\nexport default connect((state) => {\n    return {\n        collapse: state.ui.search_collapse,\n        schedules: state.schedules,\n        loading: state.ui.schedule_loading\n    }\n})(Search);\n","/*\n * This component compiles schedule data for a stop within a route, when the user selects a stop to view schedule.\n */\n\nimport React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nfunction ScheduleListItems(schedule, currentTime, limit = 3) {\n    const url = `https://www.mbta.com/schedules/${schedule.route.id}/schedule?direction_id=${schedule.direct_id}&origin=${schedule.stop.id}`;\n    const link = <a href={url} target=\"_blank\">{url}</a>;\n    const id = `${schedule.route.id}-${schedule.stop.id}-${schedule.direct_id}`;\n\n    // Case 1: No data was found (maybe after hours)\n    // Solution: show a link to the MBTA website for more details on the stop \n    // Example: https://www.mbta.com/schedules/Green-B/schedule?direction_id=0&origin=place-kencl\n    if (schedule.departureTime.length === 0) {\n        return [\n            <ListItem key={id}>\n                <ListItemText primary={'No Data'} secondary={link} />\n            </ListItem>\n        ];\n    }\n\n    // Case 2:\n    // Solution: show departure times for both inbound and outbound directions\n    // Example: can be found by going to 'Favorites' tab when no stops have been added to the Favorites list\n    const list = [];\n    for (let i = 0; i < limit && i < schedule.departureTime.length; i++) {\n        const departureTime = new Date(schedule.departureTime[i]);\n\n        // train has left\n        if (departureTime - currentTime <= 0) {\n            continue;\n        }\n\n        let t = Number.parseInt((departureTime - currentTime) / 1000, 10);\n        let s = t % 60; t = Number.parseInt(t / 60, 10);\n        let m = t % 60; t = Number.parseInt(t / 60, 10);\n        let h = t % 24;\n\n        const SS = s + 's';\n        const MM = (m === 0) ? '' : (m + 'm ');\n        const HH = (h === 0) ? '' : (h + 'h ');\n\n        list.push(\n            <ListItem key={`${id}-time-${i}`}\n                style={{ textAlign: 'center' }}>\n                <ListItemText\n                    primary={departureTime.toLocaleTimeString()}\n                    secondary={HH + MM + SS}\n                />\n            </ListItem>\n        );\n    }\n    return list;\n}\n\nexport default ScheduleListItems;\n","export default __webpack_public_path__ + \"static/media/instruction_1.77bdc7c6.png\";","export default __webpack_public_path__ + \"static/media/instruction_2.950ba95d.png\";","/*\n * This component is the Favorites tab for adding your most viewed routes and stops.\n * While the Favorites List is empty, it will show instructions on how to add stops to the list.\n * While there are favorites added, it will display each of the favorited stops and their upcoming schedules.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// List\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Divider from '@material-ui/core/Divider';\n\n// Icon Button\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// Utils\nimport ScheduleListItems from './ScheduleListItems';\n\n// Instructions\nimport instruction_1 from '../images/instruction_1.png';\nimport instruction_2 from '../images/instruction_2.png';\n\nclass Favorites extends React.Component {\n    state = {}\n\n    openDialog = (schedule) => () => {\n        const { stop, destination } = schedule;\n\n        this.props.dispatch({\n            type: 'UI_FAVORITES_DIALOG',\n            open: true,\n            message: `${stop.name} → ${destination.name}`,\n            schedule: schedule\n        });\n    }\n\n    getListItems = () => {\n        return Object.values(this.props.schedules).map((sch, index) => {\n            const id = 'sch-' + index;\n            const { route, stop, direct_id, destination, isFailed } = sch;\n            const shortNameStyle = {\n                height: '35px',\n                width: '35px',\n                lineHeight: '36px',\n                textAlign: 'center',\n                borderRadius: '50%',\n                backgroundColor: 'white',\n                opacity: 0.7,\n                marginRight: '5px',\n                fontWeight: 'bold',\n                fontAize: '20px',\n                color: route.color\n            };\n\n            const header = (\n                <ListItem key={id} style={{ backgroundColor: route.color, color: route.text_color, opacity: 0.9 }} >\n\n                    { route.short_name === '' ? '' : (\n                        <div style={shortNameStyle}>\n                            {route.short_name}\n                        </div>\n                    )}\n\n                    <ListItemText inset\n                        primary={`${stop.name} → ${destination.name} ${isFailed ? '(Update Failed)' : ''}`}\n                        secondary={`${route.direction[direct_id]}bound`}\n\n                        primaryTypographyProps={{\n                            style: {\n                                color: route.text_color\n                            }\n                        }}\n                        secondaryTypographyProps={{\n                            style: {\n                                color: route.text_color,\n                                fontWeight: 'bold'\n                            }\n                        }}\n                    />\n\n                    <ListItemSecondaryAction>\n                        <IconButton>\n                            <DeleteIcon onClick={this.openDialog(sch)} style={{ color: route.text_color }} />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            );\n\n            return [\n                header,\n                ScheduleListItems(sch, this.props.currentTime, this.props.maxNumber),\n                <Divider key={id + '-divider'} />\n            ];\n        });\n    }\n\n    render = () => {\n        const imgWidth = {\n            maxWidth: '280px',\n            width: '48%'\n        };\n\n        const listItems = this.getListItems();\n        return (\n            <List style={this.props.style}>\n                { listItems.length > 0 ? listItems : (\n                    <ListItem>\n                        <ListItemText\n                            disableTypography\n                            primary={<div>\n                                <h2>Your Favorites List is empty.</h2>\n                                <p>Please use the \"Search\" tab below and add your favorite stops to the list.</p>\n                                <div>\n                                    <img alt=\"\" src={instruction_1} style={{ ...imgWidth, marginRight: '10px' }} />\n                                    <img alt=\"\" src={instruction_2} style={imgWidth} />\n                                </div>\n                            </div>}\n                        />\n                    </ListItem>\n                )}\n            </List>\n        );\n    }\n}\n\nexport default connect((state) => {\n    return {\n        currentTime: state.currentTime,\n        schedules: state.schedules,\n        maxNumber: state.preference.max_schedule_number\n    }\n})(Favorites);\n","/*\n * This component displays pop-up preference dialog in the middle of the screen.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Slide from '@material-ui/core/Slide';\n\n// Form\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\n\n// Animate transition\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n// PreferenceDialog\nclass PreferenceDialog extends React.Component {\n    state = {}\n\n    // click anywhere to close\n    close = () => {\n        this.props.dispatch({\n            type: 'UI_PREFRENCE_DIALOG',\n            open: false\n        });\n    }\n\n    // get options\n    getOptions = () => {\n        const options = [1, 2, 3, 4, 5, 10];\n        const list = options.map(v => <option key={v} value={v}>{v}</option>)\n        list.push(<option key={99} value={99}>All</option>);\n        return list;\n    }\n\n    // change max number of schedules to be displayed\n    maxNumberChange = (event) => {\n        this.props.dispatch({\n            type: 'MAX_SCHEDULE_NUM',\n            number: event.target.value\n        })\n    }\n\n    render = () => {\n        return (\n            <Dialog\n                open={this.props.dialog}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={this.close}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\" style={{ textAlign: 'center' }}>\n                    Preference\n                </DialogTitle>\n\n                <DialogContent>\n\n                    <FormControl component=\"fieldset\">\n                        <FormLabel><u>Max</u> number of schedules</FormLabel>\n                        <TextField\n                            margin=\"normal\"\n                            value={this.props.maxNumber}\n                            onChange={this.maxNumberChange}\n                            select\n                            SelectProps={{\n                                native: true,\n                                style: {\n                                    textAlignLast: 'center',\n                                }\n                            }}\n                            style={{ paddingBottom: '8px' }}\n                        >\n                            {this.getOptions()}\n                        </TextField>\n                    </FormControl>\n\n                </DialogContent>\n\n            </Dialog>\n        );\n    }\n}\n\nexport default connect((state) => {\n    return {\n        dialog: state.ui.preference_dialog,\n        maxNumber: state.preference.max_schedule_number\n    }\n})(PreferenceDialog);\n","/*\n * This component displays a dialog when user tries to remove a stop from the favorites list,\n *  under the favorites tab.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\n// FavoritesDialog\nclass FavoritesDialog extends React.Component {\n    state = {}\n\n    // close dialog\n    closeDialog = () => {\n        this.props.dispatch({\n            type: 'UI_FAVORITES_DIALOG',\n            open: false,\n            message: ''\n        });\n    }\n\n    // remove a schedule from favorites list\n    removeSchedule = (schedule) => () => {\n        this.props.dispatch({\n            type: 'SCHEDULE_REMOVE',\n            route_id: schedule.route.id,\n            stop_id: schedule.stop.id,\n            direct_id: schedule.direct_id\n        });\n\n        this.closeDialog();\n    }\n\n    render = () => {\n        return (\n            <Dialog\n                open={this.props.dialog.open}\n                onClose={this.closeDialog}\n                keepMounted\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    Do you want to remove this schedule?\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {this.props.dialog.message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.removeSchedule(this.props.dialog.schedule)} color=\"primary\">\n                        REMOVE\n                    </Button>\n                    <Button onClick={this.closeDialog} color=\"primary\" autoFocus>\n                        CANCEL\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect((state) => {\n    return {\n        dialog: state.ui.favorites_dialog\n    }\n})(FavoritesDialog);\n","/*\n * This component displays a dialog for search results.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// AppBar\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// List\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Divider from '@material-ui/core/Divider';\n\n// Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Slide from '@material-ui/core/Slide';\n\n// Icon\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\n// Utils\nimport ScheduleListItems from './ScheduleListItems';\n\n// MBTA\nimport logo from '../images/logo.png';\n\n// Animate transition\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n// SearchDialog\nclass SearchDialog extends React.Component {\n    state = {}\n\n    dialogClose = () => {\n        this.props.dispatch({\n            type: 'UI_SEARCH_DIALOG',\n            open: false\n        });\n    }\n\n    isScheduleExist = (schedule) => {\n        const { route, stop, direct_id } = schedule;\n        return this.props.schedules.hasOwnProperty(`${route.id}_${stop.id}_${direct_id}`);\n    }\n\n    hasTrain = (schedule) => {\n        return schedule.stop.id !== schedule.destination.id;\n    }\n\n    openSnackbar = (message) => {\n        this.props.dispatch({\n            type: 'UI_SEARCH_DIALOG_SNARCK_BAR',\n            open: true,\n            message: message\n        });\n    }\n\n    addScheduleToggle = (schedule) => () => {\n        const { route, stop, direct_id, departureTime, destination } = schedule;\n        const schedule_name = `${stop.name} → ${destination.name}`;\n\n        if (this.isScheduleExist(schedule)) {\n\n            // remove schedule\n            this.props.dispatch({\n                type: 'SCHEDULE_REMOVE',\n                route_id: route.id,\n                stop_id: stop.id,\n                direct_id: direct_id\n            });\n\n            // show snackbar\n            this.openSnackbar(`Remove \"${schedule_name}\" from Favorites List`);\n\n        } else {\n\n            // add schedule\n            this.props.dispatch({\n                type: 'SCHEDULE_ADD',\n                route: route,\n                stop: stop,\n                direct_id: direct_id,\n                departureTime: departureTime\n            });\n\n            // show snackbar\n            this.openSnackbar(`Add \"${schedule_name}\" to Favorites List`);\n        }\n    }\n\n    getListItems = (schedule) => {\n        const { route, stop, direct_id, destination } = schedule;\n        const key = `${route.id}_${stop.id}_${direct_id}`;\n\n        const header = (\n            <ListItem key={key}>\n                <ListItemText\n                    primary={`${stop.name} → ${destination.name}`}\n                    secondary={`${route.direction[direct_id]}bound`}\n                    secondaryTypographyProps={{\n                        style: {\n                            fontWeight: 'bold'\n                        }\n                    }}\n                />\n\n                <ListItemSecondaryAction>\n                    <IconButton onClick={this.addScheduleToggle(schedule)}>\n                        {this.isScheduleExist(schedule) ? <StarIcon /> : <StarBorderIcon />}\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n\n        return [\n            header,\n            ScheduleListItems(schedule, this.props.currentTime, this.props.maxNumber)\n        ];\n    }\n\n    render = () => {\n        const { inbound, outbound } = this.props.search;\n        return (\n            <Dialog\n                open={this.props.dialog}\n                TransitionComponent={Transition}\n                keepMounted\n                fullScreen\n                onClose={this.dialogClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <AppBar position=\"sticky\" style={{ backgroundColor: inbound.route.color, color: inbound.route.text_color }}>\n                    <Toolbar>\n                        <ListItemIcon>\n                            <img alt='' src={logo} style={{ height: '30px', width: '30px' }} />\n                        </ListItemIcon>\n\n                        <Typography type=\"title\" color=\"inherit\" style={{ margin: 'auto', fontSize: '16px' }}>\n                            {this.props.currentTime.toLocaleTimeString()}\n                        </Typography>\n\n                        <IconButton color=\"inherit\">\n                            <ClearIcon onClick={this.dialogClose} />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n\n                <DialogContent>\n                    <List>\n                        {this.hasTrain(inbound) && this.getListItems(inbound)}\n                        {(this.hasTrain(inbound) && this.hasTrain(outbound)) && <Divider />}\n                        {this.hasTrain(outbound) && this.getListItems(outbound)}\n                    </List>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect((state) => {\n    return {\n        currentTime: state.currentTime,\n        dialog: state.ui.search_dialog,\n        search: state.searchSchedule,\n        schedules: state.schedules,\n        maxNumber: state.preference.max_schedule_number\n    }\n})(SearchDialog);\n","/*\n * This component displays notification messages at the bottom of the screen.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\n\n// Snackbar\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// Icon Button\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// Styled component\nconst styles = {\n    message: { width: '280px' },\n    action: { paddingLeft: '0px' },\n    success: { backgroundColor: '#5C9D51' },\n    info: { backgroundColor: '#3476CC' },\n    warning: { backgroundColor: '#F3A33A' },\n    error: { backgroundColor: '#C33E38' }\n}\n\n// MessageSnackbar\nclass MessageSnackbar extends React.Component {\n    state = {}\n\n    close = () => {\n        this.props.dispatch({\n            type: 'UI_SEARCH_DIALOG_SNARCK_BAR',\n            open: false\n        });\n    }\n\n    render = () => {\n        return (\n            <Snackbar\n                open={this.props.open}\n                message={this.props.message}\n                onClose={this.close}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center'\n                }}\n                ContentProps={{\n                    classes: {\n                        root: this.props.classes[this.props.variant],\n                        message: this.props.classes.message,\n                        action: this.props.classes.action\n                    }\n                }}\n                action={\n                    <IconButton color=\"inherit\" onClick={this.close}>\n                        <CloseIcon />\n                    </IconButton>\n                }\n            />\n        );\n    }\n}\n\nexport default connect((state) => {\n    return {\n        open: state.ui.snackbar.open,\n        message: state.ui.snackbar.message,\n        variant: state.ui.snackbar.variant\n    }\n})(withStyles(styles)(MessageSnackbar));\n","/*\n * Root component of the app.\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// AppBar\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n// Components\nimport Search from './Search';\nimport Favorites from './Favorites';\nimport PreferenceDialog from './PreferenceDialog';\nimport FavoritesDialog from './FavoritesDialog';\nimport SearchDialog from './SearchDialog';\nimport MessageSnackbar from './MessageSnackbar';\n\n// BottomNavigation\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\n// Icon\nimport HomeIcon from '@material-ui/icons/Home';\nimport StarIcon from '@material-ui/icons/Star';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\n// MBTA\nimport prediction from '../mbta/prediction';\n\n// App\nclass App extends React.Component {\n    state = {}\n\n    constructor(props) {\n        super(props);\n\n        this.updateSchedule();\n        setInterval(() => {\n            // update data every 10 sec\n            this.updateSchedule();\n        }, 10000);\n    }\n\n    updateSchedule = (event) => {\n        const schedules = { ...this.props.schedules };\n\n        const requests = [];\n        for (const key in schedules) {\n            const sch = schedules[key];\n            requests.push(prediction(sch.route.id, sch.stop.id, sch.direct_id));\n        }\n\n        // loading\n        this.props.dispatch({\n            type: 'UI_SCHEDULE_REFRESH',\n            refreshing: true\n        });\n\n        Promise.all(requests)\n            .then(departureTimes => {\n                let i = 0;\n                for (const key in schedules) {\n                    const sch = schedules[key];\n                    sch.departureTime = departureTimes[i++];\n                }\n\n                this.props.dispatch({\n                    type: 'SCHEDULE_UPDATE',\n                    schedules: schedules\n                });\n\n                // unloading\n                this.props.dispatch({\n                    type: 'UI_SCHEDULE_REFRESH',\n                    refreshing: false\n                });\n            })\n            .catch(error => {\n                // show error message if RefreshIcon was clicked\n                if (event) {\n                    this.props.dispatch({\n                        type: 'UI_SEARCH_DIALOG_SNACK_BAR',\n                        open: true,\n                        message: 'Failed to retrieve data from server. Please check your Internet.',\n                        variant: 'error'\n                    });\n                }\n            });\n    }\n\n    panelChange = (event, panelNumber) => {\n        this.props.dispatch({\n            type: 'UI_PANEL_CHANGE',\n            panel: panelNumber\n        });\n    }\n\n    openPreference = () => {\n        this.props.dispatch({\n            type: 'UI_PREFRENCE_DIALOG',\n            open: true\n        });\n    }\n\n    showPanel = (panelNumber) => {\n        if (panelNumber !== this.props.panel) {\n            return { display: 'none' };\n        }\n    }\n\n    render = () => {\n        // TODO: not in use. set toolbar title, if not in search, then display current time\n        // const toolBarTitle = this.props.panel === 0 ? 'Search' : this.props.currentTime.toLocaleTimeString();\n\n        return (\n            <div>\n                <PreferenceDialog />\n                <FavoritesDialog />\n                <SearchDialog />\n                <MessageSnackbar />\n\n                <AppBar position=\"sticky\" style={{ backgroundColor: '#1f88ff', color: 'white' }}>\n                    <Toolbar>\n                        {/* Preference Settings Icon */}\n                        <IconButton color=\"inherit\" onClick={this.openPreference}>\n                            <SettingsIcon />\n                        </IconButton>\n\n                        {/* Title */}\n                        <Typography type=\"title\" color=\"inherit\" style={{ margin: 'auto', position: 'relative', fontSize: '24px' }}>\n                            MBTA Schedule\n                        </Typography>\n\n                        {/* Refresh Icon */}\n                        <IconButton color=\"inherit\" onClick={this.updateSchedule}>\n                            {<RefreshIcon />}\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n\n                <div style={{ marginTop: '-6px', marginBottom: '45px' }}>\n                    {/* Panel 0 */}\n                    <Search style={this.showPanel(0)} />\n                    {/* Panel 1 */}\n                    <Favorites style={this.showPanel(1)} />\n                </div>\n\n                <BottomNavigation\n                    showLabels\n                    value={this.props.panel}\n                    onChange={this.panelChange}\n                    style={{ position: 'fixed', bottom: 0, width: '100%', backgroundColor: 'WhiteSmoke' }}\n                >\n                    <BottomNavigationAction label={'Search'} icon={<HomeIcon />} />\n                    <BottomNavigationAction label={'Favorites'} icon={<StarIcon />} />\n                </BottomNavigation>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => {\n    return {\n        currentTime: state.currentTime,\n        schedules: state.schedules,\n        panel: state.ui.panel,\n        refreshing: state.ui.schedule_is_refreshing\n    }\n})(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n * This holds default state for the app, and UI reducers for each UI component.\n */\n\n// default state of app\nconst defaultState = {\n    // { \"Blue\": false, \"Orange\": false, \"Red\": false, ...}\n    search_collapse: JSON.parse(localStorage.getItem('search_collapse') || '{}'),\n    panel: Number.parseInt(localStorage.getItem('panel') || '0', 10),\n    search_dialog: false,\n    schedule_loading: {},\n    preference_dialog: false,\n    schedule_is_refreshing: false,\n    snackbar: {\n        open: false,\n        message: '',\n        variant: ''\n    },\n    favorites_dialog: {\n        open: false,\n        message: '',\n        schedule: {}\n    }\n};\n\n// reducer\nconst uiReducer = (state = defaultState, action) => {\n    let newState = state;\n\n    // bottom panel change (between search & favorites)\n    if (action.type === 'UI_PANEL_CHANGE') {\n        newState = {\n            ...state,\n            panel: action.panel\n        };\n    }\n\n    // until a stop is selected, should be collapsed\n    if (action.type === 'UI_SEARCH_COLLAPSE') {\n        const collapse = { ...state.search_collapse };\n        collapse[action.routeId] = !collapse[action.routeId];\n\n        newState = {\n            ...state,\n            search_collapse: collapse\n        }\n    }\n\n    // search dialog\n    if (action.type === 'UI_SEARCH_DIALOG') {\n        newState = {\n            ...state,\n            search_dialog: action.open\n        }\n    }\n\n    // show loading indicator when schedule is loading\n    if (action.type === 'UI_SCHEDULE_LOADING_ADD') {\n        const loading = {\n            ...state.schedule_loading,\n        };\n        loading[action.schedule] = true;\n\n        newState = {\n            ...state,\n            schedule_loading: loading\n        }\n    }\n\n    // removed schedule loading indicator\n    if (action.type === 'UI_SCHEDULE_LOADING_REMOVE') {\n        const loading = {\n            ...state.schedule_loading\n        };\n        delete loading[action.schedule];\n\n        newState = {\n            ...state,\n            schedule_loading: loading\n        }\n    }\n\n    // preference dialog for how many schedule to show max\n    if (action.type === 'UI_PREFRENCE_DIALOG') {\n        newState = {\n            ...state,\n            preference_dialog: action.open\n        }\n    }\n\n    // refresh schedules manually\n    // refresh is done automatically every 10 seconds\n    if (action.type === 'UI_SCHEDULE_REFRESH') {\n        newState = {\n            ...state,\n            schedule_is_refreshing: action.refreshing\n        }\n    }\n\n    // snack bar from bottom with notification messages\n    if (action.type === 'UI_SEARCH_DIALOG_SNACK_BAR') {\n        newState = {\n            ...state,\n            snackbar: {\n                open: action.open,\n                message: action.message,\n                variant: action.variant\n            }\n        }\n    }\n\n    // favorites dialog\n    if (action.type === 'UI_FAVORITES_DIALOG') {\n        newState = {\n            ...state,\n            favorites_dialog: {\n                open: action.open,\n                message: action.message,\n                schedule: action.schedule\n            }\n        }\n    }\n\n    // save to location storage\n    localStorage.setItem('panel', newState.panel);\n    localStorage.setItem('search_collapse', JSON.stringify(newState.search_collapse));\n\n    return newState;\n}\n\nexport default uiReducer;\n","/*\n * This reducer helps update the time in this app.\n */\n\nconst timeReducer = (state = new Date(), action) => {\n\n    if (action.type === 'TIME_UPDATE') {\n        return new Date();\n    }\n\n    return state;\n};\n\nexport default timeReducer;\n","/*\n * This holds default state for the schedule to be searched, and the reducer for searching a schedule.\n */\n\n// default state\nconst defaultState = JSON.parse(localStorage.getItem('schedules') || '{}');\n\n// reducer\nconst scheduleReducer = (state = defaultState, action) => {\n    let newState = state;\n\n    // Add\n    if (action.type === 'SCHEDULE_ADD') {\n        const { route, stop, direct_id } = action;\n        const key = [route.id, stop.id, direct_id].join('_');\n\n        newState = {\n            ...state,\n            [key]: {\n                route: {\n                    id: route.id,\n                    name: route.name,\n                    short_name: route.short_name,\n                    color: route.color,\n                    text_color: route.text_color,\n                    direction: route.direction\n                },\n                stop: stop,\n                direct_id: direct_id,\n                destination: route.stops[direct_id === 1 ? 0 : route.stops.length - 1],\n                isFailed: false,\n                departureTime: action.departureTime\n            }\n        }\n    }\n\n    // Remove\n    if (action.type === 'SCHEDULE_REMOVE') {\n        const key = [action.route_id, action.stop_id, action.direct_id].join('_');\n\n        newState = {...state};\n        delete newState[key];\n    }\n\n    // Update\n    if (action.type === 'SCHEDULE_UPDATE') {\n        newState = action.schedules;\n    }\n\n    // Save to local storage\n    localStorage.setItem('schedules', JSON.stringify(newState));\n    \n    // return new state\n    return newState;\n}\n\nexport default scheduleReducer;\n","/*\n * This holds default schedule state for search related functions, and reducers for Search.\n */\n\n// default schedule\nconst defaultSchedule = {\n    route: {\n        direction: []\n    },\n    stop: {},\n    destination: {},\n    departureTime: []\n}\n\n// default state\nconst defaultState = {\n    inbound: defaultSchedule,\n    outbound: defaultSchedule\n}\n\n// reducer\nconst searchScheduleReducer = (state = defaultState, action) => {\n\n    if (action.type === 'SEARCH_SCHEDULE') {\n        const { route, stop, departureTimes } = action;\n\n        return {\n            inbound: {\n                route: route,\n                stop: stop,\n                direct_id: 0,\n                destination: route.stops[route.stops.length - 1],\n                isFailed: false,\n                departureTime: departureTimes[0]\n            },\n            outbound: {\n                route: route,\n                stop: stop,\n                direct_id: 1,\n                destination: route.stops[0],\n                isFailed: false,\n                departureTime: departureTimes[1]\n            }\n        };\n    }\n\n    return state;\n}\n\nexport default searchScheduleReducer;\n","/*\n * This holds default state for the preference dialog, and reducers to update max number of schedules to display.\n * Worth noting is it shows the max (meaning user can select 3 but it only displays 2).\n */\n\n// default state\nconst defaultState = {\n    max_schedule_number: Number.parseInt(localStorage.getItem('max_schedule_number') || '3', 10)\n}\n\n// reducer\nconst preferenceReducer = (state = defaultState, action) => {\n    let newState = state;\n\n    if (action.type === 'MAX_SCHEDULE_NUM') {\n        newState = {\n            ...state,\n            max_schedule_number: action.number\n        }\n    }\n\n    // save to local storage\n    localStorage.setItem('max_schedule_number', newState.max_schedule_number);\n\n    return newState;\n}\n\nexport default preferenceReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\n// Redux\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\n// Reducer\nimport uiReducer from \"./reducers/ui-reducer\";\nimport timeReducer from \"./reducers/time-reducer\";\nimport scheduleReducer from \"./reducers/schedule-reducer\";\nimport searchScheduleReducer from \"./reducers/search-schedule-reducer\";\nimport preferenceReducer from \"./reducers/preference-reducer\";\n\nconst reducer = combineReducers({\n    ui: uiReducer,\n    currentTime: timeReducer,\n    schedules: scheduleReducer,\n    searchSchedule: searchScheduleReducer,\n    preference: preferenceReducer,\n});\n\n// Store\nconst store = createStore(reducer);\n\n// Update Time every 0.5 sec\nsetInterval(() => {\n    store.dispatch({ type: \"TIME_UPDATE\" });\n}, 500);\n\n// React Render\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n","/*\n * Fetch predictions from MBTA's API.\n */\n\nconst fetch = require('node-fetch');\nconst api_key = require('./api_key');\n\nmodule.exports = function (route_id, stop_id, direction_id) {\n\n    const url = `https://api-v3.mbta.com/predictions?`\n              + `filter[stop]=${stop_id}&`\n              + `filter[direction_id]=${direction_id}&`\n              + `filter[route]=${route_id}&`\n              + `sort=departure_time&`\n              + `api_key=${api_key}`;\n\n    return fetch(url)\n            .then(res => res.json())\n            .then(json => json.data.map(o => o.attributes.departure_time));\n}\n"],"sourceRoot":""}